
// $breakpoints: 1, 600, 800, 1024;
// $designators: tiny, small, med, large;

@mixin grid() {
	display: grid;
	grid-gap: 1em;
}

div[class *= "-columns"].grid-gap {
	&-none {
		grid-gap: 0;
	}
	&-wide {
		grid-gap: 1.3em;
	}
	&-wider {
		grid-gap: 1.6em;
	}
	&-widest {
		grid-gap: 2.1em;
	}
}



.grid {
  display: grid;
}


.grid-2cols,
.grid-3cols,
.grid-4cols {
  @extend .grid-2cols-small;
}
.grid-3cols,
.grid-4cols {
  @extend .grid-3cols-medium;
}
.grid-4cols {
  @extend .grid-4cols-large;
}

@mixin cols($col-nums) {
  @each $key, $value in $breakpoints {
    @include break($key) {
      @each $col in $col-nums {
        .grid-#{$col}cols-#{$key} {
	        display: grid;
          grid-template-columns: repeat($col, 1fr);
        }
      }
    }
  }
}
//@include responsive-grid(3);

@include cols((2, 3, 4));



/*
.has-3-columns {
	&:not(.custom-breakpoints) {
		@include medium() {
			@include grid();
			grid-template-columns: repeat(3, 1fr);
		}
	}
	&-sm {
		@include small() {
			@include grid();
			grid-template-columns: repeat(3, 1fr);
		}
	}
	&-md {
		@include medium() {
			@include grid();
			grid-template-columns: repeat(3, 1fr);
		}		
	}
	&-lg {
		@include large() {
			@include grid();
			grid-template-columns: repeat(3, 1fr);
		}		
	}
}
*/




